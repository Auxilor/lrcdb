"use strict";(self.webpackChunkauxilor_docs=self.webpackChunkauxilor_docs||[]).push([[3834],{3905:function(e,t,n){n.d(t,{Zo:function(){return f},kt:function(){return m}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=o.createContext({}),l=function(e){var t=o.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},f=function(e){var t=l(e.components);return o.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,f=s(e,["components","mdxType","originalType","parentName"]),p=l(n),m=r,d=p["".concat(i,".").concat(m)]||p[m]||u[m]||a;return n?o.createElement(d,c(c({ref:t},f),{},{components:n})):o.createElement(d,c({ref:t},f))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,c=new Array(a);c[0]=p;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:r,c[1]=s;for(var l=2;l<a;l++)c[l]=n[l];return o.createElement.apply(null,c)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},4813:function(e,t,n){n.r(t),n.d(t,{assets:function(){return f},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return u}});var o=n(7462),r=n(3366),a=(n(7294),n(3905)),c=["components"],s={title:"How to make a custom effect",sidebar_position:5},i=void 0,l={unversionedId:"ecoskills/how-to-make-a-custom-effect",id:"ecoskills/how-to-make-a-custom-effect",title:"How to make a custom effect",description:"Breakdown of customeffects.yml",source:"@site/docs/ecoskills/how-to-make-a-custom-effect.md",sourceDirName:"ecoskills",slug:"/ecoskills/how-to-make-a-custom-effect",permalink:"/ecoskills/how-to-make-a-custom-effect",editUrl:"https://github.com/Auxilor/docs/tree/main/packages/create-docusaurus/templates/shared/docs/ecoskills/how-to-make-a-custom-effect.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"How to make a custom effect",sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Effects",permalink:"/ecoskills/effects"},next:{title:"How to make a custom stat",permalink:"/ecoskills/how-to-make-a-custom-stat"}},f={},u=[{value:"Breakdown of customeffects.yml",id:"breakdown-of-customeffectsyml",level:2},{value:"Typical Custom Effect Config",id:"typical-custom-effect-config",level:2},{value:"Understanding all the sections",id:"understanding-all-the-sections",level:2}],p={toc:u};function m(e){var t=e.components,n=(0,r.Z)(e,c);return(0,a.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"breakdown-of-customeffectsyml"},"Breakdown of customeffects.yml"),(0,a.kt)("p",null,"customeffects.yml is where the configs for all of your own custom skill effects are. It may initially seem daunting however it is very easy to configure and make your own effects."),(0,a.kt)("p",null,"Simply, customeffects.yml looks like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"effects:\n  - <effect 1>\n  - <effect 2>\n")),(0,a.kt)("p",null,"It's an array of effect configs - and you can add and remove configs as you please."),(0,a.kt)("h2",{id:"typical-custom-effect-config"},"Typical Custom Effect Config"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'- id: gold_touch # The ID of the effect, to be used in skills\n  placeholder: "%level%" # The placeholder to be shown in the description, you can use expressions - eg %level% * 2\n  description: "&a%placeholder%%&8 chance to get $50 every time you mine a block" # The description to be shown in lore and messages\n\n  effects:\n    - id: give_money\n      args:\n        chance: "%level%"\n        amount: 50\n      triggers:\n        - mine_block\n\n  conditions: [ ]\n')),(0,a.kt)("h2",{id:"understanding-all-the-sections"},"Understanding all the sections"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"id"),": The id of the effect (lowercase only!)"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"placeholder"),": The formula to calculate the placeholder shown in the description; you can use mathematical operations, e.g. ",(0,a.kt)("inlineCode",{parentName:"p"},"%level% / 50")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"description"),": The description shown in lore and mesasges, you can use %placeholder% to have the value"),(0,a.kt)("p",null,"Each skill effect has its own effects/conditions, and you can configure them the same way as other plugins of mine: read the guide on how to understand the effect system here:"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://plugins.auxilor.io/effects/configuring-an-effect"},"Configuring an Effect")))}m.isMDXComponent=!0}}]);